

### **2. Inspect Running Containers**
- **List all containers**:
  docker ps

- **List all (including stopped) containers**:
  docker ps -a

- **Inspect a specific container**:
  docker inspect <container_id>

- **View resource usage of containers**:
  docker stats

### **3. Check Logs**
- View logs of a container:
  docker logs <container_id>

- Follow logs in real-time:
  docker logs -f <container_id>

### **4. Access a Container**
- Start a shell inside a container:
  docker exec -it <container_id> /bin/bash

- For Alpine or minimal images:
  docker exec -it <container_id> /bin/sh

### **5. Troubleshoot Container Issues**
- **Check container status**:
  docker ps -a

- **Restart a container**:
  docker restart <container_id>

- **Stop a container**:
  docker stop <container_id>

- **Remove a stopped container**:
  docker rm <container_id>

### **6. Troubleshoot Image Issues**
- **List all images**:
  docker images

- **Remove an image**:
  docker rmi <image_id>

- **Force-remove an image**:
  docker rmi -f <image_id>

### **7. Troubleshoot Network Issues**
- **List all networks**:
  docker network ls

- **Inspect a network**:
  docker network inspect <network_name>

- **Connect a container to a network**:
  docker network connect <network_name> <container_id>

- **Disconnect a container from a network**:
  docker network disconnect <network_name> <container_id>

### **8. Check Disk Usage**
- View Docker disk usage:
  docker system df

### **9. Clean Up Unused Resources**
- **Remove stopped containers**:
  docker container prune

- **Remove unused images**:
  docker image prune

- **Remove all unused resources**:
  docker system prune

### **10. Debug with Verbose Output**
- Run Docker with debug logs:
  docker --debug <command>

### Common Use Case Commands
- **Find container consuming a specific port**:
  docker ps --filter "publish=<port>"

- **Kill a stuck container**:
  docker kill <container_id>

- **Rebuild and restart quickly**:
  docker-compose up --build
